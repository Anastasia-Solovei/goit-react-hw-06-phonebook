{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactItem.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","items","createReducer","id","name","number","state","payload","filter","_","combineReducers","contactsPersistConfig","key","storage","whitelist","persistedContacts","persistReducer","contactsReducer","rootReducer","contacts","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","Section","title","children","className","s","SectionTitle","getFilter","getContacts","ContactForm","useState","setName","setNumber","nameInputId","uuidv4","numberInputId","useSelector","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","forEach","contact","alert","InputOverlay","InputLabel","htmlFor","Input","type","onChange","pattern","required","FormButton","Filter","filterValue","filterInputId","FilterLabel","FilterInput","ContactItem","onDeleteContact","ContactItemText","DeleteBtn","onClick","ContactList","console","log","filteredContacts","toLowerCase","includes","length","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4289d08a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterLabel\":\"Filter_FilterLabel__2FPtk\",\"FilterInput\":\"Filter_FilterInput__2Ogf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactItem\":\"ContactItem_ContactItem__3prE2\",\"ContactItemText\":\"ContactItem_ContactItemText__3hHoe\",\"DeleteBtn\":\"ContactItem_DeleteBtn__2Gf7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__2Ry5b\",\"SectionTitle\":\"Section_SectionTitle__3KM0T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__1yw0s\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContact = createAction(\"contactList/addContact\");\nexport const deleteContact = createAction(\"contactList/deleteContact\");\nexport const changeFilter = createAction(\"contactList/changeFilter\");\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport { addContact, deleteContact, changeFilter } from \"./contacts-actions\";\n\nconst initialState = [\n  { id: \"id-1\", name: \"Inna Palchynska\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Halyna Sinko\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Dariia Nikolaieva\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Sergiy Prodan\", number: \"227-91-26\" },\n];\n\nconst items = createReducer(initialState, {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\n// const contactsReducer = combineReducers({\n//   items: itemsReducer,\n//   filter: filterReducer,\n// });\n\nexport default combineReducers({ items, filter });\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\nimport storage from \"redux-persist/lib/storage\";\n// import logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  whitelist: [\"items\"],\n};\n\nconst persistedContacts = persistReducer(\n  contactsPersistConfig,\n  contactsReducer\n);\n\nconst rootReducer = combineReducers({\n  contacts: persistedContacts,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.Section}>\n      <h2 className={s.SectionTitle}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","export const getFilter = (state) => state.contacts.filter;\n\nexport const getContacts = (state) => state.contacts.items;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\nimport { addContact } from \"../../redux/contacts/contacts-actions\";\n\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  // const onAddContact = (item) => dispatch(contactsActions.addContact(item));\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkUniqueContact = () => {\n    contacts.forEach((contact) => {\n      if (contact.name === name || contact.number === number) {\n        alert(\"Contact is already exist!\");\n      }\n      return;\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContact({ id: uuidv4(), name: name, number: number }));\n    //onAddContact({ id: uuidv4(), name: name, number: number });\n    checkUniqueContact();\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.ContactForm} onSubmit={handleSubmit}>\n      <div className={s.InputOverlay}>\n        <label className={s.InputLabel} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={s.Input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          id={nameInputId}\n          required\n        />\n      </div>\n\n      <div className={s.InputOverlay}>\n        <label className={s.InputLabel} htmlFor={numberInputId}>\n          Number\n        </label>\n        <input\n          className={s.Input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          id={numberInputId}\n          required\n        />\n      </div>\n\n      <button className={s.FormButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// ContactForm.propTypes = {\n//   onAddContact: PropTypes.func.isRequired,\n//   checkUniqueContact: PropTypes.func.isRequired,\n// };\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch(changeFilter);\n\n  const filterInputId = uuidv4();\n\n  return (\n    <div className={s.InputOverlay}>\n      <label htmlFor={filterInputId} className={s.FilterLabel}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.FilterInput}\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\n        id={filterInputId}\n      ></input>\n    </div>\n  );\n}\n\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactItem.module.css\";\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className={s.ContactItem}>\n      <p className={s.ContactItemText}>\n        {name}: {number}\n      </p>\n\n      <button\n        className={s.DeleteBtn}\n        id={id}\n        type=\"button\"\n        onClick={onDeleteContact}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\n// ContactItem.propTypes = {\n//   id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n\nexport default ContactItem;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteContact } from \"../../redux/contacts/contacts-actions\";\nimport {\n  getContacts,\n  getFilter,\n} from \"../../redux/contacts/contacts-selectors\";\nimport ContactItem from \"./ContactItem\";\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  console.log(contacts);\n\n  const filteredContacts = contacts.filter(({ name }) => {\n    return name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  console.log(filteredContacts);\n\n  // const filteredContacts = () => {\n  //   if (filter) {\n  //     const normalizedFilter = filter.toLowerCase();\n  //     return contacts.filter((contact) =>\n  //       contact.name.toLowerCase().includes(normalizedFilter)\n  //     );\n  //   }\n  //   return contacts;\n  // };\n\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\n\n  if (filteredContacts.length === 0) return null;\n\n  return (\n    <ul className={s.ContactList}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(PropTypes.shape),\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","import React from \"react\";\n// import { useSelector } from \"react-redux\";\nimport Section from \"./Section\";\nimport ContactForm from \"./ContactForm\";\nimport Filter from \"./Filter\";\nimport ContactList from \"./ContactList\";\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Section>\n        <ContactForm />\n      </Section>\n\n      <Section title={\"Contacts\"}>\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport s from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nconst { store, persistor } = s;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__3n4aP\",\"InputOverlay\":\"ContactForm_InputOverlay__hvmny\",\"InputLabel\":\"ContactForm_InputLabel__1qNT9\",\"Input\":\"ContactForm_Input__wVU4c\",\"FormButton\":\"ContactForm_FormButton__30xbW\"};"],"sourceRoot":""}